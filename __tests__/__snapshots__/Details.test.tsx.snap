// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test for display Details page 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "alignItems": "center",
      "display": "flex",
      "height": "100%",
      "justifyContent": "center",
      "width": "100%",
    }
  }
>
  <View
    style={
      Object {
        "display": "flex",
        "justifyContent": "flex-start",
        "marginTop": "40px",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "borderRadius": 10,
          "margin": "10px",
          "width": "30%",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="back"
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "margin": 8,
                  "textAlign": "center",
                },
                Object {
                  "color": "lightblue",
                },
              ]
            }
          >
            Back
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "height": "100%",
        "justifyContent": "center",
        "width": "100%",
      }
    }
  >
    <RCTScrollView
      ListEmptyComponent={[Function]}
      data={Array []}
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      viewabilityConfigCallbackPairs={Array []}
    >
      <View>
        <View>
          <Text>
            Somthing went Wrong
          </Text>
        </View>
      </View>
    </RCTScrollView>
  </RCTSafeAreaView>
  <Modal
    hardwareAccelerated={false}
    visible={false}
  />
</RCTSafeAreaView>
`;

exports[`test for display content page 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "alignItems": "center",
      "display": "flex",
      "height": "100%",
      "justifyContent": "center",
      "width": "100%",
    }
  }
>
  <View
    style={
      Object {
        "display": "flex",
        "justifyContent": "flex-start",
        "marginTop": "40px",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "borderRadius": 10,
          "margin": "10px",
          "width": "30%",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="back"
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "margin": 8,
                  "textAlign": "center",
                },
                Object {
                  "color": "lightblue",
                },
              ]
            }
          >
            Back
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "height": "100%",
        "justifyContent": "center",
        "width": "100%",
      }
    }
  >
    <RCTScrollView
      ListEmptyComponent={[Function]}
      data={Array []}
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      viewabilityConfigCallbackPairs={Array []}
    >
      <View>
        <View>
          <Text>
            Somthing went Wrong
          </Text>
        </View>
      </View>
    </RCTScrollView>
  </RCTSafeAreaView>
  <Modal
    hardwareAccelerated={false}
    visible={false}
  />
</RCTSafeAreaView>
`;
